---
# Update all required probe packages

# Add package signing keys
  - name: Add package signing keys
    apt_key:
      id: '{{item.id}}'
      url: '{{item.url}}'
      state: present
    loop:
     - { id: '7C4B94E8', url: 'https://bintray.com/user/downloadSubjectPublicKey?username=wand' }
     - { id: '6026DFCA', url: 'https://www.rabbitmq.com/rabbitmq-release-signing-key.asc' }
     - { id: 'A14F4FCA', url: 'https://packages.erlang-solutions.com/debian/erlang_solutions.asc' }
     - { id: '2582E0C5', url: 'https://repos.influxdata.com/influxdb.key' }
    become: true

  - name: Update sources list
    copy:
      src: files/{{ ansible_architecture }}-{{ ansible_distribution }}{{ ansible_distribution_version }}/{{item.src}}
      dest: "{{item.dest}}"
    loop:
     - { src: 'sources.list', dest: '/etc/apt/sources.list' }
     - { src: 'amplet.list', dest: '/etc/apt/sources.list.d/amplet.list' }
     - { src: 'erlang.list', dest: '/etc/apt/sources.list.d/erlang.list' }
     - { src: 'influxdb.list', dest: '/etc/apt/sources.list.d/influxdb.list' }
     - { src: 'rabbitmq.list', dest: '/etc/apt/sources.list.d/rabbitmq.list' }
    become: true

# Fix maximum Erlang version
  - name: Set maximum Erlang version <Ubuntu >=16.04>
    copy:
      src: files/apt-preferences.erlang
      dest: /etc/apt/preferences.d/erlang
    when: "ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= '16'"
    become: true

  - name: Update APT priority <Banana Pi M3>
    copy:
      src: files/apt-preferences.bpim3
      dest: /etc/apt/preferences.d/ampy
    when: ansible_kernel == '3.4.39-BPI-M3-Kernel'
    become: true

    # Set up debconf for Steam
  - name: Prepare for steam install
    debconf:
      name: "{{item.name}}"
      question: "{{item.question}}"
      value: "{{item.value}}"
      vtype: "{{item.vtype}}"
    loop:
     - { name: steamcmd, question: steam/license, value: "true", vtype: select }
     - { name: steamcmd, question: steam/question, value: "I AGREE", vtype: string }
    become: true

# should update below to be tidier and read from a file
# Unauthenticated packages are allowed so that Erlang installs OK
  - name: Install packages <16.04 x86 probes>
    when: "'probes' in group_names and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '16' and ansible_architecture == 'x86_64'"
    apt:
      name:
        - amplet2-client
        - amplet2-chromium-libs
        - chromium-codecs-ffmpeg-extra
        - curl
        - iftop
        - linux-generic-hwe-16.04
        - nmap
        - ntp
        - phantomjs
        - python3-pip
        - python3-requests
        - steamcmd
        - traceroute
        - ufw
        - whois
      state: latest
      update_cache: yes
      # allow_unauthenticated: yes
      autoremove: yes
    loop:
    become: true
    notify: Restart Amplet

  - name: Install packages <18.04 x86 probes>
    when: "'probes' in group_names and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= '18' and ansible_architecture == 'x86_64'"
    apt:
      name:
        - amplet2-client
        - amplet2-chromium-libs
        - chromium-codecs-ffmpeg-extra
        - curl
        - iftop
        - nmap
        - ntp
        - phantomjs
        - python3-pip
        - python3-requests
        - steamcmd
        - traceroute
        - ufw
        - whois
      state: latest
      update_cache: yes
      # allow_unauthenticated: yes
      autoremove: yes
    become: true
    notify: Restart Amplet

# The 'amplet2-client:*' format isn't supported? https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/packaging/os/apt.py
  - name: Install packages <aarch64 probes>
    when: "'probes' in group_names and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= '16' and ansible_architecture == 'aarch64'"
    apt:
      name:
        - amplet2-client
        # - amplet2-chromium-libs
        - curl
        - iftop
        - linux-generic-hwe-16.04
        - nmap
        - ntp
        - phantomjs
        - python3-netifaces
        - python3-pip
        - python3-requests
        - traceroute
        - ufw
        - whois
      state: latest
      update_cache: yes
      # allow_unauthenticated: yes
      autoremove: yes
    become: true
    notify: Restart Amplet

  - name: Install packages <16.04 armv7l probes>
    when: "'probes' in group_names and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= '16' and ansible_architecture == 'armv7l'"
    apt:
      name:
        - amplet2-client
        # - amplet2-chromium-libs
        - curl
        - iftop
        # - linux-generic-hwe-16.04 # doesn't work on Banana Pi's
        - nmap
        - ntp
        - phantomjs
        - python3-pip
        - python3-requests
        - traceroute
        - ufw
        - whois
      state: latest
      update_cache: yes
      # allow_unauthenticated: yes
      autoremove: yes
    become: true
    notify: Restart Amplet

  - name: Install packages <14.04 armv7l probes>
    when: "'probes' in group_names and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '14'"
    apt:
      name:
        - amplet2-client
        # - amplet2-chromium-libs
        - curl
        - iftop
        - nmap
        - ntp
        - python3-pip
        - python3-requests
        - traceroute
        - ufw
        - whois
      state: latest
      update_cache: yes
      # allow_unauthenticated: yes
      autoremove: yes
    become: true
    notify: Restart Amplet

  - name: Install packages <endpoints>
    when: "'endpoints' in group_names"
    apt:
      name:
        - amplet2-client
        - amplet2-chromium-libs
        - chromium-codecs-ffmpeg-extra
        - curl
        - iftop
        - nmap
        - ntp
        - python3-pip
        - python3-requests
        - steamcmd
        - telegraf
        - traceroute
        - ufw
        - whois
        - apache2
        - php
        - libapache2-mod-php
      state: latest
      update_cache: yes
      # allow_unauthenticated: yes
      autoremove: yes
    become: true
    notify:
      - Restart Amplet
      - Restart Apache

# Iperf3 is a custom built off the latest source (since they don't publish a package)
# Will need to uninstall libiperf0 on probes that have already had earlier versions of iperf installed
# The dictionary maps the architecture variable to the filename
  - name: Install iperf3
    apt:
      deb: "{{ packagesURL }}/iperf3_3.6-1_{{ {'aarch64':'arm64.deb', 'armv7l':'armhf.deb', 'x86_64':'amd64.deb'}[ansible_architecture] }}"
      dpkg_options: force-overwrite
    become: true

# NDT is a custom built off the latest source (since they don't publish a package)
# The dictionary maps the architecture variable to the filename
# ignore_errors because no aarch64 package available yet
  - name: Install NDT
    apt:
      deb: "{{ packagesURL }}/ndt_3.7.0-1_{{ {'aarch64':'arm64.deb', 'armv7l':'armhf.deb', 'x86_64':'amd64.deb'}[ansible_architecture] }}"
      dpkg_options: force-overwrite
    become: true
    ignore_errors: true

# SRP needs to be installed via PIP because Ubuntu package is old (getRGWinfo script needs 1.0.12)
  - name: Install SRP
    pip:
      name: srp
      state: latest
      executable: pip3
    become: true

# netifaces needs to be installed via PIP because Ubuntu14.04 package is old (getRGWinfo script needs 0.10.0)
  - name: Install netifaces <14.04 armv7l probes>
    pip:
      name: netifaces
      state: latest
      executable: pip3
    when: "'probes' in group_names and ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '14'"
    become: true

# The amplet2 package isn't set for startup by default (since it needs configuring first).
  - name: Enable Amplet on startup
    when: (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= '16') or ansible_distribution == 'Debian'
    service:
      name: amplet2-client
      enabled: yes
    become: true
    notify: Restart Amplet
  - name: Enable Amplet on startup <Ubuntu 14>
    when: "ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '14'"
    lineinfile:
      path: /etc/default/amplet2-client
      regexp: START_DAEMON
      line: START_DAEMON=1
    become: true
    notify: Restart Amplet

# Disable apache2 on startup (since amplet uses port 80)
  - name: Disable Apache on startup
    service:
      name: apache2
      enabled: no
    when: "'endpoints' in group_names"
    become: true

# Install custom scripts to /usr/local/bin (and strip extension)
  - name: Install custom scripts
    copy:
      src: files/{{item}}
      dest: /usr/local/bin/{{(item | splitext)[0]}}
      mode: 0755
    loop:
     - speedtest.py
     - ss-pretty.py
     - steamspeed.py
     - getYTinfo.sh
     - getRGWinfo.py
     - ndttest.sh
    become: true